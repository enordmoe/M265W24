---
title: "Chapter 18: Missing Values"
author: Introduction to Data Science
format:
  revealjs:
    theme: [default, custom.scss]
    slide-number: true
    chalkboard: 
      theme: whiteboard
      buttons: false
    preview-links: auto
    execute:
#      eval: false
      warning: false
      echo: true
      cache: true
    callouts:
      quote:
        title: Quote
        icon: quote
title-slide-attributes:
  data-background-color: "#EA6820"
editor: 
  markdown: 
    wrap: 72
---

```{r}
#| label: setup
#| include: false
#| eval: true
library(tidyverse)
chiflights2020 <- read_csv("https://people.kzoo.edu/enordmoe/math265/data/chiflight2020.csv")
```

## Outline

-   A Scary Data Set

-   Explicit Missing Values

-   Implicit Missing Values

-   Factors Revisited

## Review Questions: Dates & Times {.smaller}

1.  What function in **lubridate** would you use to parse `"2024-03-01"`
    into a date object?

. . .

2.  Why is handling **leap years** and **daylight savings time** tricky
    in date calculations?

. . .

3.  What’s the difference between **periods** and **durations** in
    `lubridate`?

. . .

4.  What happens when you add **1 year** to `"2024-02-29"` using:
    -   `years(1)`?
    -   `dyears(1)`?

## Missing Data is Everywhere (???)

### MCAR vs MAR vs MNAR

![](images/41iI8ttkkcL._AC_UF1000,1000_QL80_.jpg){fig-align="center"}

## A Scary Data Set: Math Enrollments 1.0

![](images/enroll_v1.png){fig-align="center"}

## Scary Data 2.0

![](images/clipboard-2144953751.png)

# What does this have to do with missing data? {background-color="#FAD9C7"}

## Import the Enrollment Data

```{r}
# The file is in your inclass265 repo
math_enroll <- read_csv("data/math_enroll.csv")
head(math_enroll, n = 20)
```

## Explicit Missing Values

-   After importing the data, all the missing values show up
    *explicitly* as NA values.

-   Often occur due as a side effect of the data entry method

## Impute by Last Observation Carried Forward (LOCF)

-   Easy to do with `fill()` command from **tidyr** package

-   Inputs: columns and direction

## Last Observation Carried Forward Example {.smaller}

```{r}
math_enroll |> 
  fill(1:2)
```

But what about the quarterly totals in column 7?

## Filling downward and upward

```{r}
#| code-line-numbers: "|2|3|4|"
math_enroll |>
  rename(qrt_total = `...7`) |>  #Deal with the non-syntactic name
  fill(1:2) |> 
  fill(qrt_total, .direction = "up") 
```

-   Can also use "updown" or "downup"

## Fixed values

-   Fix NA values that should have nonmissing codes using `coalesce()`

-   Example: How many siblings do you have?

```{r, eval=FALSE}
x <- c(1, 4, NA, 5, 7, NA, 2, NA)
coalesce(x, 0)
```

-   Often, a nonresponse could simply mean zero (or some other value)

## Fixed values: Example 1 {.smaller}

-   A specific numerical code may be used for NAs in your data.

-   Easy to fix with the if-then shortcut `na_if()`

```{r, eval=FALSE}
# Replace specific value with NA
df1 <- tibble(x = c(1, 2, 3, 4, 5, 6),
              y = c(10, 999, NA, 40, 50, 999))
df1
df1 |> 
  mutate(y = na_if(y, 999))  # Replace 20 with NA in column y
```

## Fixed values: Example 2

-   Replace "NA" with NA in column `name`

```{r, eval=FALSE}
df2 <- tibble(name = c("Alice", "Bob", "Charlie", "NA"),
              age = c(25, NA, 30, 35))
df2 |> 
  mutate(name = na_if(name, "NA"))  
```

## NaNs {.smaller}

Some "missing" values occur due to math problems!

```{r, eval=FALSE}
#| warning: true
0 / 0 
0 * Inf
Inf - Inf
sqrt(-1)
log(-10)
```

-   Warning or not, these are not numbers.

-   Could happen during grouping or subsetting when an unexpected sample
    size of zero results

-   Better to identify the cause rather than simply treat it as NA.

------------------------------------------------------------------------

::: {.callout-tip icon="false"}
# Explicit vs Implicit Missing Values

An explicit missing value is the presence of an absence.\
An implicit missing value is the absence of a presence.
:::

::: {style="text-align: right"}
Source: [R for Data
Science](https://r4ds.hadley.nz/missing-values#sec-missing-implicit)
:::

## Implicit Missing Values

-   Missing entire rows of the data set

```{r}
stocks <- tibble(
  year  = c(2020, 2020, 2020, 2020, 2021, 2021, 2021),
  qtr   = c(   1,    2,    3,    4,    2,    3,    4),
  price = c(1.88, 0.59, 0.35,   NA, 0.92, 0.17, 2.66)
)
```

-   **Explicit** missing data in 4th quarter of 2020

-   **Implicit** missing data in 1st quarter of 2021

## Leatherback Sea Turtle Nesting

[![](https://www.entercostarica.com/images/maps/costa-rica-turtle-map-flat-1000.png){width="500"}](https://www.entercostarica.com/images/maps/costa-rica-turtle-map-flat-1000.png)

::: aside
Source:
<https://www.entercostarica.com/travel-guide/costa-rica-maps/sea-turtle-map>
:::

## Leatherback Sea Turtle Nesting Raw Data

![](images/turtle_raw_data.png)

## Leatherback Sea Turtle Nesting Cleaned Data

![](images/clipboard-2155623770.png){fig-align="center"}

## Leatherback Sea Turtle Nesting Data

Causes of implicit missing data

-   Turtle PIT tag not scanned properly

-   Turtle nests on a different beach

-   Years between nesting cycles

Remedies for implicit missing data

-   Very context-dependent

## Remedies for implicit missing data

1.  Make explicit by pivoting
2.  Use `complete()` function to populate with NA values when needed

## Missing Chicago flight data

Empty factor levels because of non-existent flights

-   Bar chart of carriers for three destinations from Chicago.

```{r}
#| output-location: slide
chiflights2020 |> 
  mutate(carrier = factor(carrier)) |> 
  filter(dest == "LGA"| dest == "DTW" | dest == "SFO") |> 
  ggplot(aes(x = carrier, fill = carrier)) +
  geom_bar() +
  facet_grid(dest~.) 
```

## Missing Chicago flight data

Show all airlines whether they flew to these destinations or not using
`drop = FALSE`:

```{r}
#| code-line-numbers: "|6"
#| output-location: slide
chiflights2020 |> 
  mutate(carrier = factor(carrier)) |> 
  filter(dest == "LGA"| dest == "DTW" | dest == "SFO") |> 
  ggplot(aes(x = carrier, fill = carrier)) +
  geom_bar() +
  scale_x_discrete(drop = FALSE) +
  facet_grid(dest~.) 

```

## Summary: Missing Values {.smaller}

### Key Concepts

-   **Missing data is everywhere!**
    -   Can be **explicit** (`NA` values) or **implicit** (entire rows
        missing).\
    -   Use `complete()` to make implicit values explicit.
-   **Handling Missing Values**
    -   Replace missing values with `fill()`, `coalesce()`, `na_if()`.\
    -   Imputation techniques include **Last Observation Carried Forward
        (LOCF)**.
-   **Not all missing data should be imputed!**
    -   Sometimes, missing values reveal **important patterns** in the
        data.\
    -   Investigate **why** data is missing before filling it.

## Challenges {.smaller}

-   **Implicit vs. Explicit Missing Data** – Know when to use
    `complete()`.
-   **NaNs from Math Operations** – Can occur from `0/0`, `log(-1)`,
    etc.
-   **Factors & Missing Data** – Be mindful of empty factor levels.
    -   Use `drop = FALSE` in `scale_x_discrete()` to show all factor
        levels in visualizations.
<br>
<br>

::: callout-tip
## Handling missing data isn’t just about filling gaps—it’s about understanding the story behind the gaps.
:::
